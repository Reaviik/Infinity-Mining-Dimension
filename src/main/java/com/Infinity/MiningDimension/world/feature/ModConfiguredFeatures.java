package com.Infinity.MiningDimension.world.feature;

import com.Infinity.MiningDimension.config.ModCommonConfigs;
import net.minecraft.core.Holder;
import net.minecraft.data.worldgen.features.FeatureUtils;
import net.minecraft.world.level.levelgen.feature.ConfiguredFeature;
import net.minecraft.world.level.levelgen.feature.Feature;
import net.minecraft.world.level.levelgen.feature.configurations.OreConfiguration;

public class ModConfiguredFeatures {
    public static final Holder<ConfiguredFeature<OreConfiguration, ?>> COAL_ORE = FeatureUtils.register("infinity_mining_dimension_coal_ore", Feature.ORE, new OreConfiguration(ModReplaceables.COAL_ORE_REPLACEABLES, ModCommonConfigs.COAL_SIZE.get()));
    public static final Holder<ConfiguredFeature<OreConfiguration, ?>> COPPER_ORE = FeatureUtils.register("infinity_mining_dimension_copper_ore", Feature.ORE, new OreConfiguration(ModReplaceables.COPPER_ORE_REPLACEABLES, ModCommonConfigs.COPPER_SIZE.get()));
    public static final Holder<ConfiguredFeature<OreConfiguration, ?>> IRON_ORE = FeatureUtils.register("infinity_mining_dimension_iron_ore", Feature.ORE, new OreConfiguration(ModReplaceables.IRON_ORE_REPLACEABLES, ModCommonConfigs.IRON_SIZE.get()));
    public static final Holder<ConfiguredFeature<OreConfiguration, ?>> GOLD_ORE = FeatureUtils.register("infinity_mining_dimension_gold_ore", Feature.ORE, new OreConfiguration(ModReplaceables.GOLD_ORE_REPLACEABLES, ModCommonConfigs.GOLD_SIZE.get()));
    public static final Holder<ConfiguredFeature<OreConfiguration, ?>> LAPIS_ORE = FeatureUtils.register("infinity_mining_dimension_lapis_ore", Feature.ORE, new OreConfiguration(ModReplaceables.LAPIS_ORE_REPLACEABLES, ModCommonConfigs.LAPIS_SIZE.get()));
    public static final Holder<ConfiguredFeature<OreConfiguration, ?>> REDSTONE_ORE = FeatureUtils.register("infinity_mining_dimension_redstone_ore", Feature.ORE, new OreConfiguration(ModReplaceables.REDSTONE_ORE_REPLACEABLES, ModCommonConfigs.REDSTONE_SIZE.get()));
    public static final Holder<ConfiguredFeature<OreConfiguration, ?>> DIAMOND_ORE = FeatureUtils.register("infinity_mining_dimension_diamond_ore", Feature.ORE, new OreConfiguration(ModReplaceables.DIAMOND_ORE_REPLACEABLES, ModCommonConfigs.DIAMOND_SIZE.get()));
    public static final Holder<ConfiguredFeature<OreConfiguration, ?>> EMERALD_ORE = FeatureUtils.register("infinity_mining_dimension_emerald_ore", Feature.ORE, new OreConfiguration(ModReplaceables.EMERALD_ORE_REPLACEABLES, ModCommonConfigs.EMERALD_SIZE.get()));
    public static final Holder<ConfiguredFeature<OreConfiguration, ?>> INFINITY = FeatureUtils.register("infinity_mining_dimension_infinity", Feature.ORE, new OreConfiguration(ModReplaceables.INFINITY_ORE_REPLACEABLES, ModCommonConfigs.INFINITY_SIZE.get()));
    public static final Holder<ConfiguredFeature<OreConfiguration, ?>> DARK_ORE = FeatureUtils.register("infinity_mining_dimension_dark_ore", Feature.ORE, new OreConfiguration(ModReplaceables.DARK_ORE_REPLACEABLES, ModCommonConfigs.DARK_SIZE.get()));
    public static final Holder<ConfiguredFeature<OreConfiguration, ?>> URANINITE_ORE = FeatureUtils.register("infinity_mining_dimension_uraninite_ore", Feature.ORE, new OreConfiguration(ModReplaceables.URANINITE_ORE_REPLACEABLES, ModCommonConfigs.URANINITE_SIZE.get()));
    public static final Holder<ConfiguredFeature<OreConfiguration, ?>> GOBBER_ORE = FeatureUtils.register("infinity_mining_dimension_gobber_ore", Feature.ORE, new OreConfiguration(ModReplaceables.GOBBER_ORE_REPLACEABLES, ModCommonConfigs.GOBBER_SIZE.get()));
    public static final Holder<ConfiguredFeature<OreConfiguration, ?>> OSMIUM_ORE = FeatureUtils.register("infinity_mining_dimension_osmium_ore", Feature.ORE, new OreConfiguration(ModReplaceables.OSMIUM_ORE_REPLACEABLES, ModCommonConfigs.OSMIUM_SIZE.get()));
    public static final Holder<ConfiguredFeature<OreConfiguration, ?>> FLUORITE_ORE = FeatureUtils.register("infinity_mining_dimension_fluorite_ore", Feature.ORE, new OreConfiguration(ModReplaceables.FLUORITE_ORE_REPLACEABLES, ModCommonConfigs.FLUORITE_SIZE.get()));
    public static final Holder<ConfiguredFeature<OreConfiguration, ?>> DRACONIUM_ORE = FeatureUtils.register("infinity_mining_dimension_draconium_ore", Feature.ORE, new OreConfiguration(ModReplaceables.DRACONIUM_ORE_REPLACEABLES, ModCommonConfigs.DRACONIUM_SIZE.get()));
    public static final Holder<ConfiguredFeature<OreConfiguration, ?>> PROSPERITY_ORE = FeatureUtils.register("infinity_mining_dimension_prosperity_ore", Feature.ORE, new OreConfiguration(ModReplaceables.PROSPERITY_ORE_REPLACEABLES, ModCommonConfigs.PROSPERITY_SIZE.get()));
    public static final Holder<ConfiguredFeature<OreConfiguration, ?>> INFERIUM_ORE = FeatureUtils.register("infinity_mining_dimension_inferium_ore", Feature.ORE, new OreConfiguration(ModReplaceables.INFERIUM_ORE_REPLACEABLES, ModCommonConfigs.INFERIUM_SIZE.get()));
    public static final Holder<ConfiguredFeature<OreConfiguration, ?>> APATITE_ORE = FeatureUtils.register("infinity_mining_dimension_apatite_ore", Feature.ORE, new OreConfiguration(ModReplaceables.APATITE_ORE_REPLACEABLES, ModCommonConfigs.APATITE_SIZE.get()));
    public static final Holder<ConfiguredFeature<OreConfiguration, ?>> CINNABAR_ORE = FeatureUtils.register("infinity_mining_dimension_cinnabar_ore", Feature.ORE, new OreConfiguration(ModReplaceables.CINNABAR_ORE_REPLACEABLES, ModCommonConfigs.CINNABAR_SIZE.get()));
    public static final Holder<ConfiguredFeature<OreConfiguration, ?>> NITER_ORE = FeatureUtils.register("infinity_mining_dimension_niter_ore", Feature.ORE, new OreConfiguration(ModReplaceables.NITER_ORE_REPLACEABLES, ModCommonConfigs.NITER_SIZE.get()));
    public static final Holder<ConfiguredFeature<OreConfiguration, ?>> SULFUR_ORE = FeatureUtils.register("infinity_mining_dimension_sulfur_ore", Feature.ORE, new OreConfiguration(ModReplaceables.SULFUR_ORE_REPLACEABLES, ModCommonConfigs.SULFUR_SIZE.get()));
    public static final Holder<ConfiguredFeature<OreConfiguration, ?>> TIN_ORE = FeatureUtils.register("infinity_mining_dimension_tin_ore", Feature.ORE, new OreConfiguration(ModReplaceables.TIN_ORE_REPLACEABLES, ModCommonConfigs.TIN_SIZE.get()));
    public static final Holder<ConfiguredFeature<OreConfiguration, ?>> BAUXITE_ORE = FeatureUtils.register("infinity_mining_dimension_bauxite_ore", Feature.ORE, new OreConfiguration(ModReplaceables.BAUXITE_ORE_REPLACEABLES, ModCommonConfigs.BAUXITE_SIZE.get()));
    public static final Holder<ConfiguredFeature<OreConfiguration, ?>> LEAD_ORE = FeatureUtils.register("infinity_mining_dimension_lead_ore", Feature.ORE, new OreConfiguration(ModReplaceables.LEAD_ORE_REPLACEABLES, ModCommonConfigs.LEAD_SIZE.get()));
    public static final Holder<ConfiguredFeature<OreConfiguration, ?>> NICKEL_ORE = FeatureUtils.register("infinity_mining_dimension_nickel_ore", Feature.ORE, new OreConfiguration(ModReplaceables.NICKEL_ORE_REPLACEABLES, ModCommonConfigs.NICKEL_SIZE.get()));
    public static final Holder<ConfiguredFeature<OreConfiguration, ?>> RUBY_ORE = FeatureUtils.register("infinity_mining_dimension_ruby_ore", Feature.ORE, new OreConfiguration(ModReplaceables.RUBY_ORE_REPLACEABLES, ModCommonConfigs.RUBY_SIZE.get()));
    public static final Holder<ConfiguredFeature<OreConfiguration, ?>> SAPPHIRE_ORE = FeatureUtils.register("infinity_mining_dimension_sapphire_ore", Feature.ORE, new OreConfiguration(ModReplaceables.SAPPHIRE_ORE_REPLACEABLES, ModCommonConfigs.SAPPHIRE_SIZE.get()));
    public static final Holder<ConfiguredFeature<OreConfiguration, ?>> URANIUM_ORE = FeatureUtils.register("infinity_mining_dimension_uranium_ore", Feature.ORE, new OreConfiguration(ModReplaceables.URANIUM_ORE_REPLACEABLES, ModCommonConfigs.URANIUM_SIZE.get()));
    public static final Holder<ConfiguredFeature<OreConfiguration, ?>> CERTUS_QUARTZ_ORE = FeatureUtils.register("infinity_mining_dimension_certus_quartz_ore", Feature.ORE, new OreConfiguration(ModReplaceables.CERTUS_QUARTZ_ORE_REPLACEABLES, ModCommonConfigs.CERTUS_QUARTZ_SIZE.get()));
    public static final Holder<ConfiguredFeature<OreConfiguration, ?>> EXPETRIFIED_ORE = FeatureUtils.register("infinity_mining_dimension_expetrified_ore", Feature.ORE, new OreConfiguration(ModReplaceables.EXPETRIFIED_ORE_REPLACEABLES, ModCommonConfigs.EXPETRIFIED_SIZE.get()));
    public static final Holder<ConfiguredFeature<OreConfiguration, ?>> ARCANE_CRYSTAL_ORE = FeatureUtils.register("infinity_mining_dimension_arcane_crystal_ore", Feature.ORE, new OreConfiguration(ModReplaceables.ARCANE_CRYSTAL_ORE_REPLACEABLES, ModCommonConfigs.ARCANE_CRYSTAL_SIZE.get()));
    public static final Holder<ConfiguredFeature<OreConfiguration, ?>> BITUMINOUS_SAND_ORE = FeatureUtils.register("infinity_mining_dimension_bituminous_sand_ore", Feature.ORE, new OreConfiguration(ModReplaceables.BITUMINOUS_SAND_ORE_REPLACEABLES, ModCommonConfigs.BITUMINOUS_SAND_SIZE.get()));
    public static final Holder<ConfiguredFeature<OreConfiguration, ?>> BITUMINOUS_RED_SAND_ORE = FeatureUtils.register("infinity_mining_dimension_bituminous_red_sand_ore", Feature.ORE, new OreConfiguration(ModReplaceables.BITUMINOUS_RED_SAND_ORE_REPLACEABLES, ModCommonConfigs.BITUMINOUS_RED_SAND_SIZE.get()));
    public static final Holder<ConfiguredFeature<OreConfiguration, ?>> ELEMENTIUM_ORE = FeatureUtils.register("infinity_mining_dimension_elementium_ore", Feature.ORE, new OreConfiguration(ModReplaceables.ELEMENTIUM_ORE_REPLACEABLES, ModCommonConfigs.ELEMENTIUM_SIZE.get()));
    public static final Holder<ConfiguredFeature<OreConfiguration, ?>> DEEPSLATE_COAL_ORE = FeatureUtils.register("infinity_mining_dimension_deepslate_coal_ore", Feature.ORE, new OreConfiguration(ModReplaceables.DEEPSLATE_COAL_ORE_REPLACEABLES, ModCommonConfigs.DEEPSLATE_COAL_SIZE.get()));
    public static final Holder<ConfiguredFeature<OreConfiguration, ?>> DEEPSLATE_COPPER_ORE = FeatureUtils.register("infinity_mining_dimension_deepslate_copper_ore", Feature.ORE, new OreConfiguration(ModReplaceables.DEEPSLATE_COPPER_ORE_REPLACEABLES, ModCommonConfigs.DEEPSLATE_COPPER_SIZE.get()));
    public static final Holder<ConfiguredFeature<OreConfiguration, ?>> DEEPSLATE_IRON_ORE = FeatureUtils.register("infinity_mining_dimension_deepslate_iron_ore", Feature.ORE, new OreConfiguration(ModReplaceables.DEEPSLATE_IRON_ORE_REPLACEABLES, ModCommonConfigs.DEEPSLATE_IRON_SIZE.get()));
    public static final Holder<ConfiguredFeature<OreConfiguration, ?>> DEEPSLATE_GOLD_ORE = FeatureUtils.register("infinity_mining_dimension_deepslate_gold_ore", Feature.ORE, new OreConfiguration(ModReplaceables.DEEPSLATE_GOLD_ORE_REPLACEABLES, ModCommonConfigs.DEEPSLATE_GOLD_SIZE.get()));
    public static final Holder<ConfiguredFeature<OreConfiguration, ?>> DEEPSLATE_LAPIS_ORE = FeatureUtils.register("infinity_mining_dimension_deepslate_lapis_ore", Feature.ORE, new OreConfiguration(ModReplaceables.DEEPSLATE_LAPIS_ORE_REPLACEABLES, ModCommonConfigs.DEEPSLATE_LAPIS_SIZE.get()));
    public static final Holder<ConfiguredFeature<OreConfiguration, ?>> DEEPSLATE_REDSTONE_ORE = FeatureUtils.register("infinity_mining_dimension_deepslate_redstone_ore", Feature.ORE, new OreConfiguration(ModReplaceables.DEEPSLATE_REDSTONE_ORE_REPLACEABLES, ModCommonConfigs.DEEPSLATE_REDSTONE_SIZE.get()));
    public static final Holder<ConfiguredFeature<OreConfiguration, ?>> DEEPSLATE_DIAMOND_ORE = FeatureUtils.register("infinity_mining_dimension_deepslate_diamond_ore", Feature.ORE, new OreConfiguration(ModReplaceables.DEEPSLATE_DIAMOND_ORE_REPLACEABLES, ModCommonConfigs.DEEPSLATE_DIAMOND_SIZE.get()));
    public static final Holder<ConfiguredFeature<OreConfiguration, ?>> DEEPSLATE_EMERALD_ORE = FeatureUtils.register("infinity_mining_dimension_deepslate_emerald_ore", Feature.ORE, new OreConfiguration(ModReplaceables.DEEPSLATE_EMERALD_ORE_REPLACEABLES, ModCommonConfigs.DEEPSLATE_EMERALD_SIZE.get()));
    public static final Holder<ConfiguredFeature<OreConfiguration, ?>> DEEPSLATE_DARK_ORE = FeatureUtils.register("infinity_mining_dimension_deepslate_dark_ore", Feature.ORE, new OreConfiguration(ModReplaceables.DEEPSLATE_DARK_ORE_REPLACEABLES, ModCommonConfigs.DEEPSLATE_DARK_SIZE.get()));
    public static final Holder<ConfiguredFeature<OreConfiguration, ?>> DEEPSLATE_URANINITE_ORE = FeatureUtils.register("infinity_mining_dimension_deepslate_uraninite_ore", Feature.ORE, new OreConfiguration(ModReplaceables.DEEPSLATE_URANINITE_ORE_REPLACEABLES, ModCommonConfigs.DEEPSLATE_URANINITE_SIZE.get()));
    public static final Holder<ConfiguredFeature<OreConfiguration, ?>> DEEPSLATE_GOBBER_ORE = FeatureUtils.register("infinity_mining_dimension_deepslate_gobber_ore", Feature.ORE, new OreConfiguration(ModReplaceables.DEEPSLATE_GOBBER_ORE_REPLACEABLES, ModCommonConfigs.DEEPSLATE_GOBBER_SIZE.get()));
    public static final Holder<ConfiguredFeature<OreConfiguration, ?>> DEEPSLATE_OSMIUM_ORE = FeatureUtils.register("infinity_mining_dimension_deepslate_osmium_ore", Feature.ORE, new OreConfiguration(ModReplaceables.DEEPSLATE_OSMIUM_ORE_REPLACEABLES, ModCommonConfigs.DEEPSLATE_OSMIUM_SIZE.get()));
    public static final Holder<ConfiguredFeature<OreConfiguration, ?>> DEEPSLATE_FLUORITE_ORE = FeatureUtils.register("infinity_mining_dimension_deepslate_fluorite_ore", Feature.ORE, new OreConfiguration(ModReplaceables.DEEPSLATE_FLUORITE_ORE_REPLACEABLES, ModCommonConfigs.DEEPSLATE_FLUORITE_SIZE.get()));
    public static final Holder<ConfiguredFeature<OreConfiguration, ?>> DEEPSLATE_DRACONIUM_ORE = FeatureUtils.register("infinity_mining_dimension_deepslate_draconium_ore", Feature.ORE, new OreConfiguration(ModReplaceables.DEEPSLATE_DRACONIUM_ORE_REPLACEABLES, ModCommonConfigs.DEEPSLATE_DRACONIUM_SIZE.get()));
    public static final Holder<ConfiguredFeature<OreConfiguration, ?>> DEEPSLATE_PROSPERITY_ORE = FeatureUtils.register("infinity_mining_dimension_deepslate_prosperity_ore", Feature.ORE, new OreConfiguration(ModReplaceables.DEEPSLATE_PROSPERITY_ORE_REPLACEABLES, ModCommonConfigs.DEEPSLATE_PROSPERITY_SIZE.get()));
    public static final Holder<ConfiguredFeature<OreConfiguration, ?>> DEEPSLATE_INFERIUM_ORE = FeatureUtils.register("infinity_mining_dimension_deepslate_inferium_ore", Feature.ORE, new OreConfiguration(ModReplaceables.DEEPSLATE_INFERIUM_ORE_REPLACEABLES, ModCommonConfigs.DEEPSLATE_INFERIUM_SIZE.get()));
    public static final Holder<ConfiguredFeature<OreConfiguration, ?>> DEEPSLATE_APATITE_ORE = FeatureUtils.register("infinity_mining_dimension_deepslate_apatite_ore", Feature.ORE, new OreConfiguration(ModReplaceables.DEEPSLATE_APATITE_ORE_REPLACEABLES, ModCommonConfigs.DEEPSLATE_APATITE_SIZE.get()));
    public static final Holder<ConfiguredFeature<OreConfiguration, ?>> DEEPSLATE_CINNABAR_ORE = FeatureUtils.register("infinity_mining_dimension_deepslate_cinnabar_ore", Feature.ORE, new OreConfiguration(ModReplaceables.DEEPSLATE_CINNABAR_ORE_REPLACEABLES, ModCommonConfigs.DEEPSLATE_CINNABAR_SIZE.get()));
    public static final Holder<ConfiguredFeature<OreConfiguration, ?>> DEEPSLATE_NITER_ORE = FeatureUtils.register("infinity_mining_dimension_deepslate_niter_ore", Feature.ORE, new OreConfiguration(ModReplaceables.DEEPSLATE_NITER_ORE_REPLACEABLES, ModCommonConfigs.DEEPSLATE_NITER_SIZE.get()));
    public static final Holder<ConfiguredFeature<OreConfiguration, ?>> DEEPSLATE_SULFUR_ORE = FeatureUtils.register("infinity_mining_dimension_deepslate_sulfur_ore", Feature.ORE, new OreConfiguration(ModReplaceables.DEEPSLATE_SULFUR_ORE_REPLACEABLES, ModCommonConfigs.DEEPSLATE_SULFUR_SIZE.get()));
    public static final Holder<ConfiguredFeature<OreConfiguration, ?>> DEEPSLATE_TIN_ORE = FeatureUtils.register("infinity_mining_dimension_deepslate_tin_ore", Feature.ORE, new OreConfiguration(ModReplaceables.DEEPSLATE_TIN_ORE_REPLACEABLES, ModCommonConfigs.DEEPSLATE_TIN_SIZE.get()));
    public static final Holder<ConfiguredFeature<OreConfiguration, ?>> DEEPSLATE_BAUXITE_ORE = FeatureUtils.register("infinity_mining_dimension_deepslate_bauxite_ore", Feature.ORE, new OreConfiguration(ModReplaceables.DEEPSLATE_BAUXITE_ORE_REPLACEABLES, ModCommonConfigs.DEEPSLATE_BAUXITE_SIZE.get()));
    public static final Holder<ConfiguredFeature<OreConfiguration, ?>> DEEPSLATE_LEAD_ORE = FeatureUtils.register("infinity_mining_dimension_deepslate_lead_ore", Feature.ORE, new OreConfiguration(ModReplaceables.DEEPSLATE_LEAD_ORE_REPLACEABLES, ModCommonConfigs.DEEPSLATE_LEAD_SIZE.get()));
    public static final Holder<ConfiguredFeature<OreConfiguration, ?>> DEEPSLATE_NICKEL_ORE = FeatureUtils.register("infinity_mining_dimension_deepslate_nickel_ore", Feature.ORE, new OreConfiguration(ModReplaceables.DEEPSLATE_NICKEL_ORE_REPLACEABLES, ModCommonConfigs.DEEPSLATE_NICKEL_SIZE.get()));
    public static final Holder<ConfiguredFeature<OreConfiguration, ?>> DEEPSLATE_RUBY_ORE = FeatureUtils.register("infinity_mining_dimension_deepslate_ruby_ore", Feature.ORE, new OreConfiguration(ModReplaceables.DEEPSLATE_RUBY_ORE_REPLACEABLES, ModCommonConfigs.DEEPSLATE_RUBY_SIZE.get()));
    public static final Holder<ConfiguredFeature<OreConfiguration, ?>> DEEPSLATE_SAPPHIRE_ORE = FeatureUtils.register("infinity_mining_dimension_deepslate_sapphire_ore", Feature.ORE, new OreConfiguration(ModReplaceables.DEEPSLATE_SAPPHIRE_ORE_REPLACEABLES, ModCommonConfigs.DEEPSLATE_SAPPHIRE_SIZE.get()));
    public static final Holder<ConfiguredFeature<OreConfiguration, ?>> DEEPSLATE_URANIUM_ORE = FeatureUtils.register("infinity_mining_dimension_deepslate_uranium_ore", Feature.ORE, new OreConfiguration(ModReplaceables.DEEPSLATE_URANIUM_ORE_REPLACEABLES, ModCommonConfigs.DEEPSLATE_URANIUM_SIZE.get()));
    public static final Holder<ConfiguredFeature<OreConfiguration, ?>> DEEPSLATE_CERTUS_QUARTZ_ORE = FeatureUtils.register("infinity_mining_dimension_deepslate_certus_quartz_ore", Feature.ORE, new OreConfiguration(ModReplaceables.DEEPSLATE_CERTUS_QUARTZ_ORE_REPLACEABLES, ModCommonConfigs.DEEPSLATE_CERTUS_QUARTZ_SIZE.get()));
    public static final Holder<ConfiguredFeature<OreConfiguration, ?>> DEEPSLATE_ARCANE_CRYSTAL_ORE = FeatureUtils.register("infinity_mining_dimension_deepslate_arcane_crystal_ore", Feature.ORE, new OreConfiguration(ModReplaceables.DEEPSLATE_ARCANE_CRYSTAL_ORE_REPLACEABLES, ModCommonConfigs.DEEPSLATE_ARCANE_CRYSTAL_SIZE.get()));
    public static final Holder<ConfiguredFeature<OreConfiguration, ?>> DRAGONSTONE_ORE = FeatureUtils.register("infinity_mining_dimension_dragonstone_ore", Feature.ORE, new OreConfiguration(ModReplaceables.DRAGONSTONE_ORE_REPLACEABLES, ModCommonConfigs.DRAGONSTONE_SIZE.get()));


}
